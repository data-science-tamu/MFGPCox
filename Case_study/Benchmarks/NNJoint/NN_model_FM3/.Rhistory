library(nlme)
rm(list=ls())
# Initialize empty vectors for storing results
prior.sigma20 <- c()   # residual variances
prior.MUB0    <- c()   # fixed-effects estimates
prior.sigmab0 <- c()   # random-effects variance-covariance
B             <- c()   # random-effects by subject
# 1. Read your data
TEMP <- read.csv("Training/processed_data_fm1_ideal.csv", header=TRUE)
# 2. Construct the data frames
bdata <- data.frame(
id            = TEMP$ID,
obstime       = TEMP$time,
degradation1  = TEMP$degradation1,
degradation2  = TEMP$degradation2,
degradation3  = TEMP$degradation3,
degradation4  = TEMP$degradation4,
degradation5  = TEMP$degradation5,
degradation6  = TEMP$degradation6,
degradation7  = TEMP$degradation7,
degradation8  = TEMP$degradation8)
# 'output' will store the fitted values
output <- data.frame(id = TEMP$ID, obstime = TEMP$time)
# 3. Identify the outcome columns (assuming these are columns 3 and 4)
names <- colnames(bdata)[3:ncol(bdata)]  # e.g. c("degradation1","degradation2")
j = 0
# 4. Loop through each outcome column
for (i in names) {
# Since both columns use the same basis [1, t, t^2],
# we can define the fixed/random terms once here.
fixed_terms  <- c("obstime", "I(obstime^2)")
random_terms <- c("obstime", "I(obstime^2)")
# Construct the formula for the fixed effects
# e.g. i ~ obstime + I(obstime^2)
fml_fixed <- as.formula(
paste(i, "~", paste(fixed_terms, collapse = " + "))
)
# Construct the formula for the random effects
# e.g. ~ obstime + I(obstime^2) | id
fml_random <- as.formula(
paste("~", paste(random_terms, collapse = " + "), "| id")
)
# 5. Fit the linear mixed-effects model
fitlme <- lme(
fixed   = fml_fixed,
random  = fml_random,
data    = bdata,
control = lmeControl(opt = "optim")
)
# 6. Store the fitted values for this outcome in 'output'
output[, 3 + j] <- fitted(fitlme)
# 7. Extract and store model parameters of interest
# a) Residual variance (sigma^2)
sigma20 <- (fitlme$sigma)^2
# b) Fixed effects
MUB0 <- fitlme$coefficients$fixed
# c) Random-effects variance-covariance
SIGMAB0 <- var(fitlme$coefficients$random$id)
# d) Random-effects coefficients for each subject
B_i <- coef(fitlme)
prior.sigma20 <- append(prior.sigma20, sigma20)
prior.MUB0    <- append(prior.MUB0,    MUB0)
prior.sigmab0 <- append(prior.sigmab0, SIGMAB0)
B             <- append(B,             B_i)
# Update column index
j <- j + 1
}
# 8. Rename columns in 'output' to something meaningful
colnames(output) <- c("id", "obstime", "fitted_deg1", "fitted_deg2")
# Write results to CSV
write.csv(prior.sigma20, file = "Training/sigma20.csv")
write.csv(prior.MUB0,    file = "Training/MUB0.csv")
write.csv(prior.sigmab0, file = "Training/SIGMAB0.csv")
write.csv(output,        file = "Training/training_no_noise.csv", row.names=FALSE)
write.csv(bdata,         file = "Training/training_noise.csv",    row.names=FALSE)
write.csv(B,             file = "Training/B.csv",                 row.names=FALSE)
